version: "3.8"
services:
  ###########
  #  nginx  #
  nginx:
    image: ghcr.io/linuxserver/swag
    container_name: nginx
    restart: unless-stopped
    cap_add:
      - NET_ADMIN
    ports:
      - "443:443"
    networks:
      - general
      - irc
      - owncast
      - plex
    volumes:
      - ./nginx:/config
      - /mnt/media/websites:/www/websites:ro
      - /mnt/media/ShareX/Screenshots/temp:/www/tmp:ro
      - /mnt/media/public:/www/download:ro
    env_file:
      - ./envs/common.env
      - ./envs/nginx.env
  #  nginx  #
  ###########


  ##############
  # Bibliogram #
  bibliogram:
    image: cloudrac3r/bibliogram:latest
    container_name: bibliogram
    restart: unless-stopped
    ports:
      - "10407:10407"
    networks:
      - general
    volumes:
      - ./bibliogram/config.js:/app/config.js:ro
      - ./bibliogram/db:/app/db
    env_file: ./envs/common.env
  # Bibliogram #
  ##############


  ####################
  # Drive Monitoring #
  drives:
    image: ghcr.io/linuxserver/scrutiny:latest
    container_name: drives
    restart: unless-stopped
    cap_add:
      - SYS_RAWIO
    ports:
      - "58888:8080"
    networks:
      - general
    volumes:
      - ./drives:/config
      - /run/udev:/run/udev:ro
    devices:
      - /dev/sda:/dev/sda
      - /dev/sdb:/dev/sdb
    env_file:
      - ./envs/common.env
      - ./envs/drives.env
  # Drive Monitoring #
  ####################


  #############
  #  fishnet  #
  fishnet:
    image: niklasf/fishnet:latest
    container_name: fishnet
    restart: unless-stopped
    env_file:
      - ./envs/common.env
      - ./envs/fishnet.env
  #  fishnet  #
  #############


  ###########
  #   IRC   #
  thelounge:
    image: thelounge/thelounge:4.3.0-pre.4-alpine
    container_name: thelounge
    restart: unless-stopped
    ports:
      - "59000:9000"
    networks:
      - irc
    volumes:
      - ./thelounge:/var/opt/thelounge
    env_file: ./envs/common.env
  thelounge-public:
    image: thelounge/thelounge:4.3.0-pre.4-alpine
    container_name: thelounge-public
    restart: unless-stopped
    ports:
      - "59001:9000"
    networks:
      - irc
    volumes:
      - ./thelounge-public:/var/opt/thelounge
    env_file: ./envs/common.env
  ircd:
    image: ergochat/ergo:latest
    container_name: ircd
    restart: unless-stopped
    ports:
      - "6697:6697"
    networks:
      - irc
    volumes:
      - ./ircd:/ircd
    env_file: ./envs/common.env
  #    IRC   #
  ############


  ############
  #  Joplin  #
  joplin:
    image: joplin/server:latest
    container_name: joplin
    restart: unless-stopped
    depends_on:
      joplin-db:
        condition: service_healthy
    networks:
      - general
      - joplin
    ports:
      - "22300:22300"
    env_file:
      - ./envs/common.env
      - ./envs/joplin.env
  joplin-db:
    image: postgres:13-alpine
    container_name: joplin-db
    restart: unless-stopped
    user: 1000:1000
    networks:
      - joplin
    volumes:
      - ./joplin:/var/lib/postgresql/data
    env_file:
      - ./envs/common.env
      - ./envs/joplin-db.env
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${JOPLIN_DB_NAME}", "-U", "${JOPLIN_DB_USER}" ]
      interval: 10s
      timeout: 45s
      retries: 10
  #  Joplin  #
  ############


  ################
  # Matterbridge #
  matterbridge:
    image: 42wim/matterbridge:stable
    container_name: matterbridge
    restart: unless-stopped
    networks:
      - irc
      - mumble
    volumes:
      - ./matterbridge:/etc/matterbridge
    env_file: ./envs/common.env
  # Matterbridge #
  ################


  #################
  # Mumble/Murmur #
  mumble:
    image: ghcr.io/xnaas/docker-murmur:latest
    container_name: mumble
    restart: unless-stopped
    ports:
      - "64738:64738/tcp"
      - "64738:64738/udp"
    networks:
      - mumble
    volumes:
      - ./mumble:/data
    env_file: ./envs/common.env
  # Mumble/Murmur #
  #################


  #############
  #   Music   #
  music:
    image: deluan/navidrome:0.46.0
    container_name: music
    restart: unless-stopped
    user: 1000:1000
    ports:
      - "4533:4533"
    networks:
      - general
    volumes:
      - ./music:/data
      - /mnt/media/music:/music:ro
    env_file:
      - ./envs/common.env
      - ./envs/music.env
  #   Music   #
  #############


  ############
  #  Nitter  #
  nitter:
    image: zedeus/nitter:latest
    container_name: nitter
    restart: unless-stopped
    ports:
      - "58080:8080"
    networks:
      - general
    volumes:
      - ./nitter/conf/nitter.conf:/src/nitter.conf
      - ./nitter/data:/data
    env_file: ./envs/common.env
  #  Nitter  #
  ############


  #############
  #  OwnCast  #
  owncast:
    image: gabekangas/owncast:latest
    container_name: owncast
    restart: unless-stopped
    ports:
      - "58088:8080"
      - "1935:1935"
    networks:
      - owncast
    volumes:
      - ./owncast:/app/data
    env_file: ./envs/common.env
  #  OwnCast  #
  #############


  ############
  #   Plex   #
  plex:
    image: ghcr.io/linuxserver/plex:latest
    container_name: plex
    restart: unless-stopped
    network_mode: host
    devices:
      - /dev/dri:/dev/dri
    volumes:
      - ./plex/appdata:/config
      - ./plex/transcode:/tmp
      - /mnt/media/TV:/data/tvshows:ro
      - /mnt/media/Movies:/data/movies:ro
      - /mnt/media/Anime:/data/anime:ro
      - /mnt/media/Hentai:/data/hentai:ro
      - /mnt/media/4k-Movies:/data/movies-4k:ro
      - /mnt/media/4k-TV:/data/4k-TV:ro
      - ./zz_shared:/shared:ro
    env_file:
      - ./envs/common.env
      - ./envs/plex.env
  plexpy:
    container_name: plexpy
    image: tautulli/tautulli:beta
    restart: unless-stopped
    ports:
      - "8181:8181"
    networks:
      - plex
    volumes:
      - ./plexpy/config:/config
      - ./plex/appdata/Library/Application Support/Plex Media Server/Logs:/logs:ro
      - ./zz_shared:/shared:ro
    env_file: ./envs/common.env
  overseerr:
    container_name: overseerr
    image: ghcr.io/linuxserver/overseerr:latest
    restart: unless-stopped
    ports:
      - "5055:5055"
    networks:
      - plex
    volumes:
      - ./overseerr:/config
    env_file: ./envs/common.env
  #   Plex   #
  ############


  ###########
  #   RSS   #
  rss:
    image: ghcr.io/linuxserver/freshrss:latest
    container_name: rss
    restart: unless-stopped
    ports:
      - "47602:80"
    networks:
      - general
    volumes:
      - ./rss:/config
    env_file: ./envs/common.env
  rss-bridge:
    image: rssbridge/rss-bridge:latest
    container_name: rss-bridge
    restart: unless-stopped
    ports:
      - "51080:80"
    networks:
      - general
    volumes:
      - ./rss-bridge/whitelist.txt:/app/whitelist.txt
      - ./rss-bridge/config.ini.php:/app/config.ini.php
    env_file: ./envs/common.env
  #   RSS   #
  ###########


  ###########
  #  Tesla  #
  teslamate:
    image: teslamate/teslamate:latest
    container_name: teslamate
    restart: unless-stopped
    depends_on:
      teslamate-db:
        condition: service_healthy
    cap_drop:
      - all
    ports:
      - "50110:4000"
    networks:
      - general
      - tesla
    env_file: ./envs/tesla.env
  teslamate-db:
    image: postgres:13-alpine
    container_name: teslamate-db
    restart: unless-stopped
    user: 1000:1000
    networks:
      - tesla
    volumes:
      - ./teslamate/teslamate-db:/var/lib/postgresql/data
    env_file:
      - ./envs/common.env
      - ./envs/tesla-db.env
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${TESLA_DB_NAME}", "-U", "${TESLA_DB_USER}" ]
      interval: 10s
      timeout: 45s
      retries: 10
  teslamate-grafana:
    image: teslamate/grafana:latest
    container_name: teslamate-grafana
    restart: unless-stopped
    depends_on:
      teslamate-db:
        condition: service_healthy
    user: 1000:1000
    ports:
      - "50111:3000"
    networks:
      - general
      - tesla
    volumes:
      - ./teslamate/grafana:/var/lib/grafana
    env_file:
      - ./envs/common.env
      - ./envs/tesla-graf.env
  teslamate-mqtt:
    image: eclipse-mosquitto:1.6
    container_name: teslamate-mqtt
    restart: unless-stopped
    ports:
      - "50112:1883"
    networks:
      - tesla
    volumes:
      - ./teslamate/mosquitto-conf:/mosquitto/config
      - ./teslamate/mosquitto-data:/mosquitto/data
      - ./teslamate/mosquitto-log:/mosquitto/log
    env_file: ./envs/common.env
  #  Tesla  #
  ###########


  ############
  #   Wiki   #
  wikijs:
    image: requarks/wiki:2
    container_name: wikijs
    restart: unless-stopped
    depends_on:
      wikijs-db:
        condition: service_healthy
    ports:
      - "60000:3000"
    networks:
      - general
      - wikijs
    volumes:
      - ./wikijs/data:/wiki/data/content
    env_file:
      - ./envs/common.env
      - ./envs/wikijs.env
  wikijs-db:
    image: postgres:11-alpine
    container_name: wikijs-db
    restart: unless-stopped
    user: 1000:1000
    networks:
      - wikijs
    volumes:
      - ./wikijs/db:/var/lib/postgresql/data
    env_file:
      - ./envs/common.env
      - ./envs/wikijs-db.env
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "${WIKI_DB_NAME}", "-U", "${WIKI_DB_USER}" ]
      interval: 10s
      timeout: 45s
      retries: 10
  #   Wiki   #
  ############


  ##############
  # youtube-dl #
  youtubedl:
    image: nbr23/youtube-dl-server:yt-dlp
    container_name: youtubedl
    restart: unless-stopped
    ports:
      - "48080:8080"
    networks:
      - general
    volumes:
      - ./youtube/data:/youtube-dl
      - ./youtube/config:/app_config
    env_file:
      - ./envs/common.env
      - ./envs/youtubedl.env
  # youtube-dl #
  ##############


  ############
  #   Send   #
  send:
    image: registry.gitlab.com/timvisee/send:latest
    container_name: send
    restart: unless-stopped
    user: 1000:1000
    depends_on:
      send-redis:
        condition: service_healthy
    ports:
      - "51234:1234"
    networks:
      - general
      - send
    volumes:
      - ./send/uploads:/uploads
    env_file:
      - ./envs/common.env
      - ./envs/send.env
  send-redis:
    image: redis:alpine
    container_name: send-redis
    restart: unless-stopped
    user: 1000:1000
    networks:
      - send
    volumes:
      - ./send/redis:/data
    env_file: ./envs/common.env
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 10s
      timeout: 45s
      retries: 10
  #   Send   #
  ############


  #############
  # Meme Wiki #
  meme-wiki:
    image: ghcr.io/linuxserver/dokuwiki:latest
    container_name: meme-wiki
    restart: unless-stopped
    ports:
      - "48880:80"
    networks:
      - general
    volumes:
      - ./meme-wiki:/config
    env_file: ./envs/common.env
  # Meme Wiki #
  #############


##############
# Networking #
networks:
  general:
    driver: bridge
  irc:
    driver: bridge
  joplin:
    driver: bridge
  mumble:
    driver: bridge
  owncast:
    driver: bridge
  plex:
    driver: bridge
  send:
    driver: bridge
  tesla:
    driver: bridge
  wikijs:
    driver: bridge
